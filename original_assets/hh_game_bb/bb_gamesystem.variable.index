#bbgame#variable#index# define processors for game messagesbb_gamesystem.processors = [#gamemessageparser, #engine, #players, #world, #ego, #scores, #countdown, #bottombar, #sound, #balloons, #finalscores, #standardmessageparser, #errormanager]#define processor classes and messages to listen tobb_gamesystem.gamemessageparser.processor.class = ["BB GameMessageParser Class"]bb_gamesystem.gamemessageparser.processor.updates = [#msgstruct_fullgamestatus, #msgstruct_gamestatus, #msgstruct_gameobjectcreated, #msgstruct_gameobjectdeleted, #msgstruct_gamestart, #msgstruct_gameend, #msgstruct_gamereset]#define processor classes and messages to listen tobb_gamesystem.standardmessageparser.processor.class = ["Gamesystem StandardMessageParser Class"]bb_gamesystem.standardmessageparser.processor.updates = [#msgstruct_heightmap, #msgstruct_users, #msgstruct_youarespectator, #msgstruct_playerrejoined, #msgstruct_joinfailed, #msgstruct_startfailed, #msgstruct_numtickets, #msgstruct_skilllevelchanged]# ENGINE processor handles creating & discarding game objects.# define processor classes and messages to listen tobb_gamesystem.engine.processor.class = [ "BB Engine Class"]bb_gamesystem.engine.processor.updates = [#create_game_object, #update_game_object, #verify_game_object_id_list, #bb_event_0, #bb_event_1,  #bb_event_3, #bb_event_5, #gameend]# define processor classes and messages to listen tobb_gamesystem.players.processor.class = ["BB AvatarManager Class"]bb_gamesystem.players.processor.updates = [#bb_event_2]# define processor classes and messages to listen tobb_gamesystem.world.processor.class = ["BB World Class"]bb_gamesystem.world.processor.updates  = [#world_ready, #gamestatus_tiles, #gamestatus_flood, #fullgamestatus_tiles, #gamereset]# define processor classes and messages to listen tobb_gamesystem.ego.processor.class = ["BB Egomanager Class"]bb_gamesystem.ego.processor.updates  = [#send_set_target, #gamestart]# define processor classes and messages to listen tobb_gamesystem.scores.processor.class = [ "BB Score Class"]bb_gamesystem.scores.processor.updates = [#gamestatus_scores, #gamestart, #gameend, #fullgamestatus_time]# define processor classes and messages to listen tobb_gamesystem.countdown.processor.class = [ "BB Countdown Class"]bb_gamesystem.countdown.processor.updates = [#fullgamestatus_time, #gamereset, #gamestart]# define processor classes and messages to listen tobb_gamesystem.bottombar.processor.class = [ "BB Bottombar Class"]bb_gamesystem.bottombar.processor.updates = [#bb_event_1, #bb_event_3, #bb_event_5, #gameend, #setfxicon, #setmusicicon]# define processor classes and messages to listen tobb_gamesystem.sound.processor.class = [ "BB Soundmanager Class"]bb_gamesystem.sound.processor.updates = [#musicstart, #soundeffect, #setfx, #setmusic, #gameend, #gamestart]# define processor classes and messages to listen tobb_gamesystem.balloons.processor.class = [ "BB Balloon Manager Class"]bb_gamesystem.balloons.processor.updates = [#bb_event_5, #gameend]# define processor classes and messages to listen tobb_gamesystem.finalscores.processor.class = ["BB Gameover Class"]bb_gamesystem.finalscores.processor.updates = [#numtickets, #gameend, #gamereset, #playerrejoined]# define processor classes and messages to listen tobb_gamesystem.errormanager.processor.class = ["BB Errormanager Class"]bb_gamesystem.errormanager.processor.updates = [#joinfailed, #startfailed]